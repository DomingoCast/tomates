{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport MainLayout from \"./containers/MainLayout/MainLayout\";\n\nvar App = function App() {\n  var _Font$useFonts = Font.useFonts({\n    RudaRegular: require(\"../assets/fonts/static/Ruda-Regular.ttf\"),\n    RudaBold: require(\"../assets/fonts/static/Ruda-Bold.ttf\")\n  }),\n      _Font$useFonts2 = _slicedToArray(_Font$useFonts, 2),\n      fontsLoaded = _Font$useFonts2[0],\n      error = _Font$useFonts2[1];\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontFamily: 'RudaRegular'\n    }\n  });\n\n  if (error) {\n    console.log('[ERROR]', error);\n  }\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, React.createElement(MainLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/App.js"],"names":["React","Font","AppLoading","MainLayout","App","useFonts","RudaRegular","require","RudaBold","fontsLoaded","error","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","fontFamily","console","log"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,UAAP;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,uBACeH,IAAI,CAACI,QAAL,CAAc;AACvCC,IAAAA,WAAW,EAAEC,OAAO,2CADmB;AAEvCC,IAAAA,QAAQ,EAAED,OAAO;AAFsB,GAAd,CADf;AAAA;AAAA,MACPE,WADO;AAAA,MACMC,KADN;;AAOd,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,eAAe,EAAE,MAFR;AAGTC,MAAAA,UAAU,EAAE,QAHH;AAITC,MAAAA,cAAc,EAAE,QAJP;AAKTC,MAAAA,UAAU,EAAE;AALH;AADoB,GAAlB,CAAf;;AASA,MAAIT,KAAJ,EAAU;AACNU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,KAAvB;AACH;;AACD,MAAI,CAACD,WAAL,EAAkB;AACd,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO;AACH,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;AACJ,CA5BD;;AA+BA,eAAeV,GAAf","sourcesContent":["//import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as Font from 'expo-font'\nimport { AppLoading } from 'expo'\n\nimport MainLayout from './containers/MainLayout/MainLayout'\n\nconst App = () => {\n    const [fontsLoaded, error] = Font.useFonts({\n        RudaRegular: require('../assets/fonts/static/Ruda-Regular.ttf'),\n        RudaBold: require('../assets/fonts/static/Ruda-Bold.ttf'),\n        //Bold/\n    })\n\n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontFamily: 'RudaRegular',\n      },\n    });\n    if (error){\n        console.log('[ERROR]', error)\n    } \n    if (!fontsLoaded) {\n        return <AppLoading />;\n    } else {\n        return (\n            <View style={styles.container}>\n                <MainLayout/>\n            </View>\n      );\n    }\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
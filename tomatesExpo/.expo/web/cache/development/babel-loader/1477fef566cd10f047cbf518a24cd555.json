{"ast":null,"code":"var _jsxFileName = \"/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/components/Clock/Clock.js\";\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar clock = function clock(props) {\n  var parseNumber = function parseNumber(n) {\n    return (\"0\" + Math.floor(n)).slice(-2);\n  };\n\n  var parseTime = function parseTime() {\n    var time = props.type === 'timer' ? props.goal - props.time : props.time;\n    var div = 60 * 60;\n    var hours = time / div;\n    var minutes = hours % 1 * 60;\n    var seconds = minutes % 1 * 60;\n    console.log('[CLOCK]', hours, minutes, seconds);\n    var miliseconds = seconds % 1;\n    return {\n      hours: parseNumber(hours),\n      minutes: parseNumber(minutes),\n      seconds: parseNumber(seconds),\n      miliseconds: miliseconds\n    };\n  };\n\n  var styledTime = function styledTime() {\n    var parsed = parseTime();\n    return React.createElement(View, {\n      style: styles.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, parsed.hours), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 64\n      }\n    }, parsed.minutes), React.createElement(Text, {\n      style: [styles.text, styles.seconds],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 113\n      }\n    }, parsed.seconds));\n  };\n\n  return React.createElement(View, {\n    style: styles.clock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, styledTime());\n};\n\nvar styles = StyleSheet.create({\n  time: {\n    color: '#ffffff',\n    fontSize: 30,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  text: {\n    color: '#ffffff',\n    fontSize: 50,\n    fontFamily: 'RudaRegular',\n    letterSpacing: 50 * 0.00,\n    paddingRight: 3\n  },\n  seconds: {\n    fontSize: 30,\n    paddingBottom: 5\n  },\n  clock: {\n    width: 350,\n    height: 350,\n    borderRadius: 175,\n    backgroundColor: '#A51B02',\n    justifyContent: \"center\"\n  }\n});\nexport default clock;","map":{"version":3,"sources":["/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/components/Clock/Clock.js"],"names":["React","clock","props","parseNumber","n","Math","floor","slice","parseTime","time","type","goal","div","hours","minutes","seconds","console","log","miliseconds","styledTime","parsed","styles","text","StyleSheet","create","color","fontSize","display","flexDirection","justifyContent","alignItems","fontFamily","letterSpacing","paddingRight","paddingBottom","width","height","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\n\nconst clock = (props) => {\n    const parseNumber = (n) => {\n        return ((\"0\" + Math.floor(n)).slice(-2))\n    }\n    const parseTime = () => {\n        const time = props.type === 'timer' ? props.goal - props.time : props.time\n        const div = 60*60//*100\n        const hours = time/div\n        const minutes = (hours%1)*60\n        const seconds = (minutes%1)*60\n        console.log('[CLOCK]', hours, minutes, seconds) \n        const miliseconds = seconds%1\n        return ({\n            hours: parseNumber(hours),\n            minutes: parseNumber(minutes),\n            seconds: parseNumber(seconds),\n            miliseconds: miliseconds\n        })\n    }\n    \n    const styledTime = () => {\n        const parsed = parseTime()\n        //console.log('[PARSED]', parsed)\n        return (\n            <View style={styles.time}>\n                <Text style={styles.text}>{parsed.hours}</Text><Text style={styles.text}>{parsed.minutes}</Text><Text style={[styles.text, styles.seconds]}>{parsed.seconds}</Text>\n            </View>\n        )\n    }\n    return (\n        <View style={styles.clock}>\n        {styledTime()}\n        </View>\n        \n    )\n}\n\nconst styles = StyleSheet.create({\n    time: {\n        //backgroundColor: '#A51B02',\n        color: '#ffffff',\n        fontSize: 30,\n        display: 'flex',\n        flexDirection: 'row',\n        //borderStyle: \"solid\",\n        //borderColor: \"blue\",\n        //borderWidth: 3,\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n    },\n    text: {\n        color: '#ffffff',\n        fontSize: 50,\n        fontFamily: 'RudaRegular',\n        letterSpacing: 50*0.00,\n        paddingRight: 3\n    },\n    seconds: {\n        //color: '#ffffff',\n        fontSize: 30,\n        paddingBottom: 5\n        //borderStyle: \"solid\",\n        //borderColor: \"blue\",\n        //borderWidth: 3,\n        //alignSelf: 'flex-end'\n    },\n    clock: {\n        //width: Dimensions.get('window').width * 0.9,\n        //height: Dimensions.get('window').width * 0.9,\n        width: 350,\n        height: 350,\n        //borderRadius:Dimensions.get('window').width * 0.9 / 2,\n        borderRadius: 175,\n        backgroundColor: '#A51B02',\n        justifyContent: \"center\"\n\n    }\n})\n\nexport default clock\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/containers/Timer/Timer.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Clock from \"../../components/Clock/Clock\";\nimport Boton from \"../../components/Boton/Boton\";\nimport Centerer from \"../../hoc/Centerer/Centerer\";\n\nvar Timer = function Timer(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(1000),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeInter = _useState4[0],\n      setTimeInter = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      run = _useState6[0],\n      setRun = _useState6[1];\n\n  var _useState7 = useState(66),\n      _useState8 = _slicedToArray(_useState7, 2),\n      goal = _useState8[0],\n      setGoal = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      interval = _useState10[0],\n      setTheInterval = _useState10[1];\n\n  var _useState11 = useState('timer'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clockType = _useState12[0],\n      setClockType = _useState12[1];\n\n  useEffect(function () {\n    if (time === goal) {\n      handleClockType();\n      setTime(0);\n    }\n  }, [time]);\n\n  var runClock = function runClock() {\n    setRun(true);\n    setTheInterval(setInterval(passTime, timeInter));\n  };\n\n  var passTime = function passTime() {\n    setTime(function (time) {\n      return time + 1;\n    });\n  };\n\n  var stopClock = function stopClock() {\n    setRun(false);\n    setTime(0);\n    clearInterval(interval);\n    console.log('[STOP]', interval);\n  };\n\n  var handleClockType = function handleClockType() {\n    clockType === 'timer' ? setClockType('stopWatch') : setClockType('timer');\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Clock, {\n    goal: goal,\n    run: run,\n    time: time,\n    type: clockType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(Centerer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Boton, {\n    styling: styles.start,\n    click: runClock,\n    text: \"run\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.playSvg,\n    source: require(\"../../../assets/svg/play-button.svg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))), React.createElement(Boton, {\n    styling: styles.stop,\n    click: stopClock,\n    text: \"stop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.stopSvg,\n    source: require(\"../../../assets/svg/stop.svg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  start: {\n    color: 'white'\n  },\n  playSvg: {\n    width: 100,\n    height: 100\n  },\n  stopSvg: {\n    width: 80,\n    height: 80\n  },\n  stop: {\n    backgroundColor: '#A51B02'\n  }\n});\nexport default Timer;","map":{"version":3,"sources":["/home/domingo_cast/webdev/proyectos/tomates/tomatesExpo/src/containers/Timer/Timer.js"],"names":["React","useState","useEffect","Clock","Boton","Centerer","Timer","props","time","setTime","timeInter","setTimeInter","run","setRun","goal","setGoal","interval","setTheInterval","clockType","setClockType","handleClockType","runClock","setInterval","passTime","stopClock","clearInterval","console","log","styles","start","playSvg","require","stop","stopSvg","StyleSheet","create","color","width","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Image, Text, View } from 'react-native';\nimport Clock from '../../components/Clock/Clock'\nimport Boton from '../../components/Boton/Boton'\nimport Centerer from '../../hoc/Centerer/Centerer'\n//Boton/\n\nconst Timer = (props) => {\n    const [time, setTime] = useState(0)\n    const [timeInter, setTimeInter] = useState(1000)\n    const [run, setRun] = useState(false)\n    const [goal, setGoal] = useState(66)\n    const [interval, setTheInterval] = useState(null)\n    const [clockType, setClockType] = useState('timer')\n\n    useEffect(() => {\n        //setTheTime(time)\n        //console.log('[EFFECT]', time, run, goal)\n        if(time === goal){\n            handleClockType()\n            setTime(0)\n        }\n    }, [time])\n\n    const runClock = () => {\n        setRun(true)\n        setTheInterval(setInterval(passTime, timeInter))\n    }\n    \n    const passTime = () => {\n        setTime(time => time + 1)\n        //console.log('[PASS]', time)\n    }\n\n    const stopClock = () => {\n        setRun(false)\n        setTime(0)\n        clearInterval(interval)\n        console.log('[STOP]', interval)\n    }\n\n    const handleClockType = () => {\n        clockType === 'timer' ? setClockType('stopWatch') : setClockType('timer')\n    }\n\n    return (\n        <View>\n            <Clock goal={goal} run={run} time={time} type={clockType}/>\n            <Centerer>\n                <Boton styling={styles.start} click={runClock} text=\"run\">\n                    <Image\n                        style={styles.playSvg}\n                        source={require('../../../assets/svg/play-button.svg')}\n                    />\n                </Boton>\n            </Centerer>\n            <Boton styling={styles.stop} click={stopClock} text=\"stop\">\n                    <Image\n                        style={styles.stopSvg}\n                        source={require('../../../assets/svg/stop.svg')}\n                    />\n            </Boton>\n        </View>\n        \n    )\n}\n\nconst styles = StyleSheet.create({\n    start: {\n        color: 'white',\n    },\n    playSvg: {\n        width: 100,\n        height: 100,\n    },\n    stopSvg: {\n        width: 80,\n        height: 80,\n    },\n    stop: {\n        backgroundColor: '#A51B02'\n    }\n})\n\nexport default Timer\n"]},"metadata":{},"sourceType":"module"}